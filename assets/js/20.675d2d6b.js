(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{336:function(t,r,a){t.exports=a.p+"assets/img/iterator.a7ae1d2a.png"},529:function(t,r,a){"use strict";a.r(r);var s=a(12),e=Object(s.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"设计模式-c-语言描述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#设计模式-c-语言描述"}},[t._v("#")]),t._v(" 设计模式 𝘾 语言描述")]),t._v(" "),r("h2",{attrs:{id:"iterator-模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#iterator-模式"}},[t._v("#")]),t._v(" Iterator 模式")]),t._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),r("p",[t._v("Iterator 模式用于在数据集合中按照顺序遍历集合，Iterator 模式的优势在于将遍历与实现分离开。")])]),t._v(" "),r("h3",{attrs:{id:"类图"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#类图"}},[t._v("#")]),t._v(" 类图")]),t._v(" "),r("p",[r("img",{attrs:{src:a(336),alt:"iterator"}})]),t._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),r("p",[r("strong",[t._v("next")]),t._v("：返回当前元素，并指向下一个元素。")]),t._v(" "),r("p",[r("strong",[t._v("hasNext")]),t._v("：确认接下来是否可以调用 next 方法。")])]),t._v(" "),r("h3",{attrs:{id:"示例程序"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#示例程序"}},[t._v("#")]),t._v(" 示例程序")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/suda-morris/CDesignPattern/blob/master/Iterator/",target:"_blank",rel:"noopener noreferrer"}},[t._v("将书放置到书架中，并将书的名字按顺序显示出来"),r("OutboundLink")],1)]),t._v(" "),r("h3",{attrs:{id:"与-vistor-模式的差别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#与-vistor-模式的差别"}},[t._v("#")]),t._v(" 与 Vistor 模式的差别")]),t._v(" "),r("p",[t._v("Iterator 模式是从集合中一个一个取出元素进行遍历，但是并没有在 Iterator 接口中声明对取出的元素进行何种处理。\nVistor 模式则是在便利元素集合的过程中，对元素进行相同的处理。")])])}),[],!1,null,null,null);r.default=e.exports}}]);